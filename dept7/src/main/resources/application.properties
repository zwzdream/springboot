

###datasource--ָ配置mysql数据库
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url = jdbc:mysql://localhost:3306/zwz
spring.datasource.username = root
spring.datasource.password = 123456
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.max-active=20
spring.datasource.max-idle=8
spring.datasource.min-idle=8
spring.datasource.initial-size=10
### Java Persistence Api
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
#[org.hibernate.cfg.ImprovedNamingStrategy  #org.hibernate.cfg.DefaultNamingStrategy]
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
#创建表的引擎。默认为myisam，可以不配置，这个就是默认的
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#创建表的引擎为inno没有配置下面使用mysql默认引擎myisam
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect


#logging  日志打印，开发时
logging.level.org.springframework.web=debug
logging.level.org.springframework.jdbc=trace
logging.level.org.springframework.aop=debug
logging.level.org.springframework.cache=debug
logging.level.com.dept.dao=debug

########################################################
###THYMELEAF (ThymeleafAutoConfiguration)
########################################################
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
# ;charset=<encoding> is added
#spring.thymeleaf.content-type=text/html
# set to false for hot refresh
#�������̽���رջ���
spring.thymeleaf.cache=false

########################################################
###FREEMARKER (FreeMarkerAutoConfiguration)
########################################################
spring.freemarker.allow-request-override=false
spring.freemarker.cache=false
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false
#spring.freemarker.prefix=
#spring.freemarker.request-context-attribute=
#spring.freemarker.settings.*=
#spring.freemarker.suffix=.ftl
#spring.freemarker.template-loader-path=classpath:/templates/ #comma-separated list
#spring.freemarker.view-names= # whitelist of view names that can be resolved

###mybatis
mybatis.config-location=classpath:/mybatis/config/mybatis-config.xml
mybatis.mapper-locations=classpath:/mybatis/*Mapper.xml
mybatis.type-aliases-package=com.dept.model



##静态资源的路径Ĭ，默认为/**
#spring.mvc.static-path-pattern=/static/**

#######################################
##关闭Spring BootĬ的绿叶子
##1.在配置文件配置spring.mvc.favicon.enabled = false
##2.将自己的icon图标放在spring-boot Ĭ资源resources/static下面
##3.在页面使用<link rel="icon" type="image/x-icon" href="/static/favicon.ico">
#######################################
spring.mvc.favicon.enabled = false



##hibernate默认使用ImprovedNamingStrategy，创建表时使用toLowerCase生成策略，这个时候@Column(name="createTime")不生效
##而且，hibernate4+弃用spring.jpa.hibernate.naming.strategy指定字段的生成策略
## spring boot使用下面语句指定生成字段的策略
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

#########################################
###Redis单机版整合 Redis作为缓存
#########################################
spring.cache.type=redis
spring.redis.host=10.5.33.235
#spring.redis.port=6379
#spring.redis.password=

###########################################
###整合redis集群，由于spring boot对redis集群支持不太好，需要自己代码配置,看dept8
###10.5.33.235：7001~70006
###########################################
#spring.redis.cluster.nodes=10.5.33.235:7001,10.5.33.235:7002,10.5.33.235:7003,10.5.33.235:7004,10.5.33.235:7005,10.5.33.235:7006